module Main (main) where

import Control.Monad
import Data.List
import Data.List.Split
import System.Directory
import System.FilePath

main :: IO ()
main = forM_ modules $ \m -> do
  let segs = splitOn "." m :: [String]
  let dir = ("src" </>) . intercalate "/" . reverse . drop 1 . reverse $ segs
  let modName = head . reverse $ segs
  let fp = dir </> modName <.> "hs"
  createDirectoryIfMissing True dir
  writeFile fp (contents m)
  return ()

contents :: String -> String
contents m = "\
  \ {-# LANGUAGE PackageImports #-}\n \
  \ module " ++ m ++ " (module M) where\n \
  \ import \"base\" " ++ m ++ " as M\n"

modules :: [String]
modules =
  [ "Control.Applicative"
  , "Control.Arrow"
  , "Control.Category"
  , "Control.Concurrent"
  , "Control.Concurrent.Chan"
  , "Control.Concurrent.MVar"
  , "Control.Concurrent.QSem"
  , "Control.Concurrent.QSemN"
  , "Control.Exception"
  , "Control.Exception.Base"
  , "Control.Monad"
  , "Control.Monad.Fix"
  , "Control.Monad.Instances"
  , "Control.Monad.ST"
  , "Control.Monad.ST.Lazy"
  , "Control.Monad.ST.Lazy.Safe"
  , "Control.Monad.ST.Lazy.Unsafe"
  , "Control.Monad.ST.Safe"
  , "Control.Monad.ST.Strict"
  , "Control.Monad.ST.Unsafe"
  , "Control.Monad.Zip"
  , "Data.Bits"
  , "Data.Bool"
  , "Data.Char"
  , "Data.Coerce"
  , "Data.Complex"
  , "Data.Data"
  , "Data.Dynamic"
  , "Data.Either"
  , "Data.Eq"
  , "Data.Fixed"
  , "Data.Foldable"
  , "Data.Function"
  , "Data.Functor"
  , "Data.IORef"
  , "Data.Int"
  , "Data.Ix"
  , "Data.List"
  , "Data.Maybe"
  , "Data.Monoid"
  , "Data.OldTypeable"
  , "Data.OldTypeable.Internal"
  , "Data.Ord"
  , "Data.Proxy"
  , "Data.Ratio"
  , "Data.STRef"
  , "Data.STRef.Lazy"
  , "Data.STRef.Strict"
  , "Data.String"
  , "Data.Traversable"
  , "Data.Tuple"
  , "Data.Type.Bool"
  , "Data.Type.Coercion"
  , "Data.Type.Equality"
  , "Data.Typeable"
  , "Data.Typeable.Internal"
  , "Data.Unique"
  , "Data.Version"
  , "Data.Word"
  , "Debug.Trace"
  , "Foreign"
  , "Foreign.C"
  , "Foreign.C.Error"
  , "Foreign.C.String"
  , "Foreign.C.Types"
  , "Foreign.Concurrent"
  , "Foreign.ForeignPtr"
  , "Foreign.ForeignPtr.Safe"
  , "Foreign.ForeignPtr.Unsafe"
  , "Foreign.Marshal"
  , "Foreign.Marshal.Alloc"
  , "Foreign.Marshal.Array"
  , "Foreign.Marshal.Error"
  , "Foreign.Marshal.Pool"
  , "Foreign.Marshal.Safe"
  , "Foreign.Marshal.Unsafe"
  , "Foreign.Marshal.Utils"
  , "Foreign.Ptr"
  , "Foreign.Safe"
  , "Foreign.StablePtr"
  , "Foreign.Storable"
  , "GHC.Arr"
  , "GHC.Base"
  , "GHC.Char"
  , "GHC.Conc"
  , "GHC.Conc.IO"
  , "GHC.Conc.Signal"
  , "GHC.Conc.Sync"
  , "GHC.ConsoleHandler"
  , "GHC.Constants"
  , "GHC.Desugar"
  , "GHC.Enum"
  , "GHC.Environment"
  , "GHC.Err"
  , "GHC.Exception"
  , "GHC.Exts"
  , "GHC.Fingerprint"
  , "GHC.Fingerprint.Type"
  , "GHC.Float"
  , "GHC.Float.ConversionUtils"
  , "GHC.Float.RealFracMethods"
  , "GHC.Foreign"
  , "GHC.ForeignPtr"
  , "GHC.GHCi"
  , "GHC.Generics"
  , "GHC.IO"
  , "GHC.IO.Buffer"
  , "GHC.IO.BufferedIO"
  , "GHC.IO.Device"
  , "GHC.IO.Encoding"
  , "GHC.IO.Encoding.CodePage"
  , "GHC.IO.Encoding.Failure"
  , "GHC.IO.Encoding.Iconv"
  , "GHC.IO.Encoding.Latin1"
  , "GHC.IO.Encoding.Types"
  , "GHC.IO.Encoding.UTF16"
  , "GHC.IO.Encoding.UTF32"
  , "GHC.IO.Encoding.UTF8"
  , "GHC.IO.Exception"
  , "GHC.IO.FD"
  , "GHC.IO.Handle"
  , "GHC.IO.Handle.FD"
  , "GHC.IO.Handle.Internals"
  , "GHC.IO.Handle.Text"
  , "GHC.IO.Handle.Types"
  , "GHC.IO.IOMode"
  , "GHC.IOArray"
  , "GHC.IORef"
  , "GHC.IP"
  , "GHC.Int"
  , "GHC.List"
  , "GHC.MVar"
  , "GHC.Num"
  , "GHC.PArr"
  , "GHC.Pack"
  , "GHC.Profiling"
  , "GHC.Ptr"
  , "GHC.Read"
  , "GHC.Real"
  , "GHC.ST"
  , "GHC.STRef"
  , "GHC.Show"
  , "GHC.Stable"
  , "GHC.Stack"
  , "GHC.Stats"
  , "GHC.Storable"
  , "GHC.TopHandler"
  , "GHC.TypeLits"
  , "GHC.Unicode"
  , "GHC.Weak"
  , "GHC.Word"
  , "Numeric"
  , "System.CPUTime"
  , "System.Console.GetOpt"
  , "System.Environment"
  , "System.Exit"
  , "System.IO"
  , "System.IO.Error"
  , "System.IO.Unsafe"
  , "System.Info"
  , "System.Mem"
  , "System.Mem.StableName"
  , "System.Mem.Weak"
  , "System.Posix.Internals"
  , "System.Posix.Types"
  , "System.Timeout"
  , "Text.ParserCombinators.ReadP"
  , "Text.ParserCombinators.ReadPrec"
  , "Text.Printf"
  , "Text.Read"
  , "Text.Read.Lex"
  , "Text.Show"
  , "Text.Show.Functions"
  , "Unsafe.Coerce"
  , "GHC.IO.Encoding.CodePage.API"
  , "GHC.IO.Encoding.CodePage.Table"
  , "GHC.Conc.Windows"
  , "GHC.Windows"
  , "GHC.Event"
  ]
